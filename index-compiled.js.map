{"version":3,"sources":["index.js"],"names":[],"mappings":";;;AAGA,YAAY,CAAA;AACZ,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAC1B,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;AACtB,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAChC,IAAI,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAA;AAChC,IAAI,MAAM,GAAG,SAAS,CAAA;AACtB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;AACpB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;AACpB,IAAI,cAAc,GAAG,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,CAAA;AAC/C,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,GAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAC,OAAO,CAAC,MAAM,CAAA;;AAE/E,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,GAAG,EAAC;AAClD,aAAS,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;AACxC,SAAK,IAAI,MAAM,IAAI,GAAG,CAAC,OAAO,EAAE;AAC5B,iBAAS,CAAC,KAAK,CAAC,8BAA8B,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AACpE,WAAG,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;KAC9C;AACD,aAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,GAAC,IAAI,CAAC,CAAC;AAClD,WAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAA;AACjD,OAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;CAChB,CAAC,CAAC;AACH,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;;AAGvB,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE;AACpD,aAAS,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;AACzC,QAAG,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE;AACjC,iBAAS,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;AACrD,sBAAc,GAAG,MAAM,GAAC,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;KAC5D;AACD,QAAI,OAAO,GAAG;AACV,WAAG,EAAE,cAAc,GAAG,GAAG,CAAC,GAAG;AAC7B,cAAM,EAAE,GAAG,CAAC,MAAM;KAErB,CAAA;;AACD,aAAS,CAAC,KAAK,CAAC,qBAAqB,GAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAC,IAAI,CAAC,CAAC;AACrE,OAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;CACvC,CAAC,CAAA;AACF,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA","file":"index-compiled.js","sourcesContent":["/**\n * Created by kupadhy on 3/19/16.\n */\n\"use strict\"\nlet http = require(\"http\")\nlet fs = require(\"fs\")\nlet request = require(\"request\")\nlet argv = require(\"yargs\").argv\nlet scheme = 'http://'\nlet host = argv.host\nlet port = argv.port\nlet destinationUrl = scheme + host + ':' + port\nlet logStream = argv.logfile? fs.createWriteStream(argv.logfile):process.stdout\n\nlet echoServer = http.createServer(function (req, res){\n    logStream.write(\"Inside echo server\\n\");\n    for (let header in req.headers) {\n        logStream.write(\"Echo server headers recieved\" + header.toString());\n        res.setHeader(header, req.headers[header]);\n    }\n    logStream.write(JSON.stringify(req.headers)+\"\\n\");\n    console.log(\"Echo Server returning response..\\n\")\n    req.pipe(res)\n});\nechoServer.listen(8000)\n\n\nlet proxyServer = http.createServer(function (req, res) {\n    logStream.write(\"Inside proxy server\\n\");\n    if(req.headers['x-destination-url']) {\n        logStream.write(\"x-destination-url header found \\n\");\n        destinationUrl = scheme+req.headers['x-destination-url'];\n    }\n    let options = {\n        url: destinationUrl + req.url,\n        method: req.method,\n        //headers: req.headers\n    }\n    logStream.write(\"Sending request to \"+ JSON.stringify(options)+\"\\n\");\n    req.pipe(request(options)).pipe(res)\n})\nproxyServer.listen(9000)\n"]}