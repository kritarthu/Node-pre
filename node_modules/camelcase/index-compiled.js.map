{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,SAAS,iBAAiB,CAAC,GAAG,EAAE;AAC/B,KAAI,eAAe,GAAG,KAAK,CAAC;;AAE5B,MAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,MAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAEtB,MAAI,eAAe,IAAI,AAAC,UAAU,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE;AACrE,MAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC7C,kBAAe,GAAG,KAAK,CAAC;AACxB,IAAC,EAAE,CAAC;GACJ,MAAM;AACN,kBAAe,GAAI,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,AAAC,CAAC;GAC1C;EACD;;AAED,QAAO,GAAG,CAAC;CACX;;AAED,MAAM,CAAC,OAAO,GAAG,YAAY;AAC5B,KAAI,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,GAAG,EAAE;AAC/C,SAAO,GAAG,CAAC,IAAI,EAAE,CAAC;EAClB,CAAC,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;AACxB,SAAO,GAAG,CAAC,MAAM,CAAC;EAClB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAEb,KAAI,CAAC,GAAG,CAAC,MAAM,EAAE;AAChB,SAAO,EAAE,CAAC;EACV;;AAED,KAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;AACrB,SAAO,GAAG,CAAC;EACX;;AAED,KAAI,CAAC,AAAC,UAAU,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE;AAC5B,MAAI,GAAG,KAAK,GAAG,CAAC,WAAW,EAAE,EAAE;AAC9B,UAAO,GAAG,CAAC,WAAW,EAAE,CAAC;GACzB;;AAED,MAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE;AACpC,UAAO,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GAC3C;;AAED,SAAO,GAAG,CAAC;EACX;;AAED,IAAG,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;;AAE7B,QAAO,GAAG,CACT,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CACxB,WAAW,EAAE,CACb,OAAO,CAAC,iBAAiB,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE;AAC5C,SAAO,EAAE,CAAC,WAAW,EAAE,CAAC;EACxB,CAAC,CAAC;CACH,CAAC","file":"index-compiled.js","sourcesContent":["'use strict';\n\nfunction preserveCamelCase(str) {\n\tvar isLastCharLower = false;\n\n\tfor (var i = 0; i < str.length; i++) {\n\t\tvar c = str.charAt(i);\n\n\t\tif (isLastCharLower && (/[a-zA-Z]/).test(c) && c.toUpperCase() === c) {\n\t\t\tstr = str.substr(0, i) + '-' + str.substr(i);\n\t\t\tisLastCharLower = false;\n\t\t\ti++;\n\t\t} else {\n\t\t\tisLastCharLower = (c.toLowerCase() === c);\n\t\t}\n\t}\n\n\treturn str;\n}\n\nmodule.exports = function () {\n\tvar str = [].map.call(arguments, function (str) {\n\t\treturn str.trim();\n\t}).filter(function (str) {\n\t\treturn str.length;\n\t}).join('-');\n\n\tif (!str.length) {\n\t\treturn '';\n\t}\n\n\tif (str.length === 1) {\n\t\treturn str;\n\t}\n\n\tif (!(/[_.\\- ]+/).test(str)) {\n\t\tif (str === str.toUpperCase()) {\n\t\t\treturn str.toLowerCase();\n\t\t}\n\n\t\tif (str[0] !== str[0].toLowerCase()) {\n\t\t\treturn str[0].toLowerCase() + str.slice(1);\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tstr = preserveCamelCase(str);\n\n\treturn str\n\t.replace(/^[_.\\- ]+/, '')\n\t.toLowerCase()\n\t.replace(/[_.\\- ]+(\\w|$)/g, function (m, p1) {\n\t\treturn p1.toUpperCase();\n\t});\n};\n"]}