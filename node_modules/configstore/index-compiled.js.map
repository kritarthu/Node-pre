{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAChC,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACtC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACxC,IAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACpC,IAAI,eAAe,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;AAEnD,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE,CAAA,CAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC1D,IAAI,SAAS,GAAG,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAC5E,IAAI,eAAe,GAAG,sCAAsC,CAAC;AAC7D,IAAI,eAAe,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC1C,IAAI,gBAAgB,GAAG,EAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,EAAC,CAAC;;AAEnD,SAAS,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;AACxC,KAAI,GAAG,IAAI,IAAI,EAAE,CAAC;;AAElB,KAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,GACrC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,aAAa,CAAC,GAC5B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,GAAG,OAAO,CAAC,CAAC;;AAExC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;;AAE7C,KAAI,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE,EAAE,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;CACtD;;AAED,WAAW,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;AACvD,IAAG,EAAE;AACJ,KAAG,EAAE,eAAY;AAChB,OAAI;AACH,WAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;IACtD,CAAC,OAAO,GAAG,EAAE;;AAEb,QAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC1B,WAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,eAAe,CAAC,CAAC;AACtD,YAAO,EAAE,CAAC;KACV;;;AAGD,QAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC1B,QAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,GAAG,IAAI,GAAG,eAAe,GAAG,IAAI,CAAC;KAC1D;;;AAGD,QAAI,GAAG,CAAC,IAAI,KAAK,aAAa,EAAE;AAC/B,oBAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,gBAAgB,CAAC,CAAC;AACtD,YAAO,EAAE,CAAC;KACV;;AAED,UAAM,GAAG,CAAC;IACV;GACD;AACD,KAAG,EAAE,aAAU,GAAG,EAAE;AACnB,OAAI;;;AAGH,UAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,eAAe,CAAC,CAAC;;AAEtD,mBAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,gBAAgB,CAAC,CAAC;IACnF,CAAC,OAAO,GAAG,EAAE;;AAEb,QAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC1B,QAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,GAAG,IAAI,GAAG,eAAe,GAAG,IAAI,CAAC;KAC1D;;AAED,UAAM,GAAG,CAAC;IACV;GACD;EACD;AACD,KAAI,EAAE;AACL,KAAG,EAAE,eAAY;AAChB,UAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;GAC1C;EACD;CACD,CAAC,CAAC;;AAEH,WAAW,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,GAAG,EAAE;AAC1C,QAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CACrB,CAAC;;AAEF,WAAW,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;AAC/C,KAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;AACtB,KAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3B,QAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AACrC,SAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;GACnB,CAAC,CAAC;EACH,MAAM;AACN,QAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;EAClB;AACD,KAAI,CAAC,GAAG,GAAG,MAAM,CAAC;CAClB,CAAC;;AAEF,WAAW,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,GAAG,EAAE;AAC1C,KAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;AACtB,QAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AACnB,KAAI,CAAC,GAAG,GAAG,MAAM,CAAC;CAClB,CAAC;;AAEF,WAAW,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;AACzC,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;CACd,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"index-compiled.js","sourcesContent":["'use strict';\nvar path = require('path');\nvar fs = require('graceful-fs');\nvar osenv = require('osenv');\nvar assign = require('object-assign');\nvar mkdirp = require('mkdirp');\nvar uuid = require('uuid');\nvar xdgBasedir = require('xdg-basedir');\nvar osTmpdir = require('os-tmpdir');\nvar writeFileAtomic = require('write-file-atomic');\n\nvar user = (osenv.user() || uuid.v4()).replace(/\\\\/g, '');\nvar configDir = xdgBasedir.config || path.join(osTmpdir(), user, '.config');\nvar permissionError = 'You don\\'t have access to this file.';\nvar defaultPathMode = parseInt('0700', 8);\nvar writeFileOptions = {mode: parseInt('0600', 8)};\n\nfunction Configstore(id, defaults, opts) {\n\topts = opts || {};\n\n\tvar pathPrefix = opts.globalConfigPath ?\n\t\tpath.join(id, 'config.json') :\n\t\tpath.join('configstore', id + '.json');\n\n\tthis.path = path.join(configDir, pathPrefix);\n\n\tthis.all = assign({}, defaults || {}, this.all || {});\n}\n\nConfigstore.prototype = Object.create(Object.prototype, {\n\tall: {\n\t\tget: function () {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(fs.readFileSync(this.path, 'utf8'));\n\t\t\t} catch (err) {\n\t\t\t\t// create dir if it doesn't exist\n\t\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\t\tmkdirp.sync(path.dirname(this.path), defaultPathMode);\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\n\t\t\t\t// improve the message of permission errors\n\t\t\t\tif (err.code === 'EACCES') {\n\t\t\t\t\terr.message = err.message + '\\n' + permissionError + '\\n';\n\t\t\t\t}\n\n\t\t\t\t// empty the file if it encounters invalid JSON\n\t\t\t\tif (err.name === 'SyntaxError') {\n\t\t\t\t\twriteFileAtomic.sync(this.path, '', writeFileOptions);\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t},\n\t\tset: function (val) {\n\t\t\ttry {\n\t\t\t\t// make sure the folder exists as it\n\t\t\t\t// could have been deleted in the meantime\n\t\t\t\tmkdirp.sync(path.dirname(this.path), defaultPathMode);\n\n\t\t\t\twriteFileAtomic.sync(this.path, JSON.stringify(val, null, '\\t'), writeFileOptions);\n\t\t\t} catch (err) {\n\t\t\t\t// improve the message of permission errors\n\t\t\t\tif (err.code === 'EACCES') {\n\t\t\t\t\terr.message = err.message + '\\n' + permissionError + '\\n';\n\t\t\t\t}\n\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t},\n\tsize: {\n\t\tget: function () {\n\t\t\treturn Object.keys(this.all || {}).length;\n\t\t}\n\t}\n});\n\nConfigstore.prototype.get = function (key) {\n\treturn this.all[key];\n};\n\nConfigstore.prototype.set = function (key, val) {\n\tvar config = this.all;\n\tif (arguments.length === 1) {\n\t\tObject.keys(key).forEach(function (k) {\n\t\t\tconfig[k] = key[k];\n\t\t});\n\t} else {\n\t\tconfig[key] = val;\n\t}\n\tthis.all = config;\n};\n\nConfigstore.prototype.del = function (key) {\n\tvar config = this.all;\n\tdelete config[key];\n\tthis.all = config;\n};\n\nConfigstore.prototype.clear = function () {\n\tthis.all = {};\n};\n\nmodule.exports = Configstore;\n"]}