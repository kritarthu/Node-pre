{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["//filter will reemit the data if cb(err,pass) pass is truthy\n\n// reduce is more tricky\n// maybe we want to group the reductions or emit progress updates occasionally\n// the most basic reduce just emits one 'data' event after it has recieved 'end'\n\nvar Stream = require('stream').Stream\n  , es = exports\n  , through = require('through')\n  , from = require('from')\n  , duplex = require('duplexer')\n  , map = require('map-stream')\n  , pause = require('pause-stream')\n  , split = require('split')\n  , pipeline = require('stream-combiner')\n  , immediately = global.setImmediate || process.nextTick;\n\nes.Stream = Stream //re-export Stream from core\nes.through = through\nes.from = from\nes.duplex = duplex\nes.map = map\nes.pause = pause\nes.split = split\nes.pipeline = es.connect = es.pipe = pipeline\n// merge / concat\n//\n// combine multiple streams into a single stream.\n// will emit end only once\n\nes.concat = //actually this should be called concat\nes.merge = function (/*streams...*/) {\n  var toMerge = [].slice.call(arguments)\n  if (toMerge.length === 1 && (toMerge[0] instanceof Array)) {\n    toMerge = toMerge[0] //handle array as arguments object\n  }\n  var stream = new Stream()\n  stream.setMaxListeners(0) // allow adding more than 11 streams\n  var endCount = 0\n  stream.writable = stream.readable = true\n\n  toMerge.forEach(function (e) {\n    e.pipe(stream, {end: false})\n    var ended = false\n    e.on('end', function () {\n      if(ended) return\n      ended = true\n      endCount ++\n      if(endCount == toMerge.length)\n        stream.emit('end') \n    })\n  })\n  stream.write = function (data) {\n    this.emit('data', data)\n  }\n  stream.destroy = function () {\n    toMerge.forEach(function (e) {\n      if(e.destroy) e.destroy()\n    })\n  }\n  return stream\n}\n\n\n// writable stream, collects all events into an array \n// and calls back when 'end' occurs\n// mainly I'm using this to test the other functions\n\nes.writeArray = function (done) {\n  if ('function' !== typeof done)\n    throw new Error('function writeArray (done): done must be function')\n\n  var a = new Stream ()\n    , array = [], isDone = false\n  a.write = function (l) {\n    array.push(l)\n  }\n  a.end = function () {\n    isDone = true\n    done(null, array)\n  }\n  a.writable = true\n  a.readable = false\n  a.destroy = function () {\n    a.writable = a.readable = false\n    if(isDone) return\n    done(new Error('destroyed before end'), array)\n  }\n  return a\n}\n\n//return a Stream that reads the properties of an object\n//respecting pause() and resume()\n\nes.readArray = function (array) {\n  var stream = new Stream()\n    , i = 0\n    , paused = false\n    , ended = false\n \n  stream.readable = true  \n  stream.writable = false\n \n  if(!Array.isArray(array))\n    throw new Error('event-stream.read expects an array')\n  \n  stream.resume = function () {\n    if(ended) return\n    paused = false\n    var l = array.length\n    while(i < l && !paused && !ended) {\n      stream.emit('data', array[i++])\n    }\n    if(i == l && !ended)\n      ended = true, stream.readable = false, stream.emit('end')\n  }\n  process.nextTick(stream.resume)\n  stream.pause = function () {\n     paused = true\n  }\n  stream.destroy = function () {\n    ended = true\n    stream.emit('close')\n  }\n  return stream\n}\n\n//\n// readable (asyncFunction)\n// return a stream that calls an async function while the stream is not paused.\n//\n// the function must take: (count, callback) {...\n//\n\nes.readable =\nfunction (func, continueOnError) {\n  var stream = new Stream()\n    , i = 0\n    , paused = false\n    , ended = false\n    , reading = false\n\n  stream.readable = true  \n  stream.writable = false\n \n  if('function' !== typeof func)\n    throw new Error('event-stream.readable expects async function')\n  \n  stream.on('end', function () { ended = true })\n  \n  function get (err, data) {\n    \n    if(err) {\n      stream.emit('error', err)\n      if(!continueOnError) stream.emit('end')\n    } else if (arguments.length > 1)\n      stream.emit('data', data)\n\n    immediately(function () {\n      if(ended || paused || reading) return\n      try {\n        reading = true\n        func.call(stream, i++, function () {\n          reading = false\n          get.apply(null, arguments)\n        })\n      } catch (err) {\n        stream.emit('error', err)    \n      }\n    })\n  }\n  stream.resume = function () {\n    paused = false\n    get()\n  }\n  process.nextTick(get)\n  stream.pause = function () {\n     paused = true\n  }\n  stream.destroy = function () {\n    stream.emit('end')\n    stream.emit('close')\n    ended = true\n  }\n  return stream\n}\n\n\n//\n// map sync\n//\n\nes.mapSync = function (sync) { \n  return es.through(function write(data) {\n    var mappedData = sync(data)\n    if (typeof mappedData !== 'undefined')\n      this.emit('data', mappedData)\n  })\n}\n\n//\n// log just print out what is coming through the stream, for debugging\n//\n\nes.log = function (name) {\n  return es.through(function (data) {\n    var args = [].slice.call(arguments)\n    if(name) console.error(name, data)\n    else     console.error(data)\n    this.emit('data', data)\n  })\n}\n\n\n//\n// child -- pipe through a child process\n//\n\nes.child = function (child) {\n\n  return es.duplex(child.stdin, child.stdout)\n\n}\n\n//\n// parse\n//\n// must be used after es.split() to ensure that each chunk represents a line\n// source.pipe(es.split()).pipe(es.parse())\n\nes.parse = function (options) {\n  var emitError = !!(options ? options.error : false)\n  return es.through(function (data) {\n    var obj\n    try {\n      if(data) //ignore empty lines\n        obj = JSON.parse(data.toString())\n    } catch (err) {\n      if (emitError)\n        return this.emit('error', err)\n      return console.error(err, 'attempting to parse:', data)\n    }\n    //ignore lines that where only whitespace.\n    if(obj !== undefined)\n      this.emit('data', obj)\n  })\n}\n//\n// stringify\n//\n\nes.stringify = function () { \n  var Buffer = require('buffer').Buffer\n  return es.mapSync(function (e){ \n    return JSON.stringify(Buffer.isBuffer(e) ? e.toString() : e) + '\\n'\n  }) \n}\n\n//\n// replace a string within a stream.\n//\n// warn: just concatenates the string and then does str.split().join(). \n// probably not optimal.\n// for smallish responses, who cares?\n// I need this for shadow-npm so it's only relatively small json files.\n\nes.replace = function (from, to) {\n  return es.pipeline(es.split(from), es.join(to))\n} \n\n//\n// join chunks with a joiner. just like Array#join\n// also accepts a callback that is passed the chunks appended together\n// this is still supported for legacy reasons.\n// \n\nes.join = function (str) {\n  \n  //legacy api\n  if('function' === typeof str)\n    return es.wait(str)\n\n  var first = true\n  return es.through(function (data) {\n    if(!first)\n      this.emit('data', str)\n    first = false\n    this.emit('data', data)\n    return true\n  })\n}\n\n\n//\n// wait. callback when 'end' is emitted, with all chunks appended as string.\n//\n\nes.wait = function (callback) {\n  var arr = []\n  return es.through(function (data) { arr.push(data) },\n    function () {\n      var body = Buffer.isBuffer(arr[0]) ? Buffer.concat(arr)\n        : arr.join('')\n      this.emit('data', body)\n      this.emit('end')\n      if(callback) callback(null, body)\n    })\n}\n\nes.pipeable = function () {\n  throw new Error('[EVENT-STREAM] es.pipeable is deprecated')\n}\n"]}