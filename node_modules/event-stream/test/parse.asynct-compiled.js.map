{"version":3,"sources":["parse.asynct.js"],"names":[],"mappings":";;AAAA,IAAI,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC;IACnB,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;;AAEzC,OAAO,CAAE,qDAAqD,CAAC,GAAG,UAAU,IAAI,EAAE;AAChF,MAAI,WAAW,GAAG,EAAE,CAAC,KAAK,EAAE,CAAA;AAC5B,MAAI,eAAe,GAAG,OAAO,CAAC,KAAK,CAAA;AACnC,SAAO,CAAC,KAAK,GAAG,YAAY;AAC1B,WAAO,CAAC,KAAK,GAAG,eAAe,CAAA;AAC/B,MAAE,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAA;AAC7B,QAAI,CAAC,IAAI,EAAE,CAAA;GACZ,CAAA;;;AAGD,aAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;CACvB,CAAA;;AAED,OAAO,CAAE,8DAA8D,CAAC,GAAG,UAAU,IAAI,EAAE;AACzF,MAAI,WAAW,GAAG,EAAE,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC,CAAA;AACtC,MAAI,aAAa,CAAA;AACjB,MAAI;AACF,QAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;GAChB,CAAC,OAAM,CAAC,EAAE;AACT,iBAAa,GAAG,CAAC,CAAA;GAClB;;AAED,aAAW,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE;AACnC,MAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAA;AAC9B,WAAO,CAAC,QAAQ,CAAC,YAAY;AAC3B,UAAI,CAAC,IAAI,EAAE,CAAA;KACZ,CAAC,CAAA;GACH,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;CACd,CAAA","file":"parse.asynct-compiled.js","sourcesContent":["var es = require('../')\n  , it = require('it-is').style('colour')\n\nexports ['es.parse() writes parsing errors with console.error'] = function (test) {\n  var parseStream = es.parse()\n  var oldConsoleError = console.error\n  console.error = function () {\n    console.error = oldConsoleError\n    it(arguments.length > 0).ok()\n    test.done()\n  }\n\n  // bare word is not valid JSON\n  parseStream.write('A')\n}\n\nexports ['es.parse({error: true(thy)}) emits error events from parsing'] = function (test) {\n  var parseStream = es.parse({error: 1})\n  var expectedError\n  try {\n    JSON.parse('A')\n  } catch(e) {\n    expectedError = e\n  }\n\n  parseStream.on('error', function (e) {\n    it(e).deepEqual(expectedError)\n    process.nextTick(function () {\n      test.done()\n    })\n  }).write('A')\n}\n"]}