{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;AACZ,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;;AAEtB,IAAI,UAAU,GAAG,MAAM,CAAC,OAAO,GAAG,YAAY;;;;;;;AAO5C,MAAI,EAAE,CAAC,IAAI,EAAE,IAAI,YAAY,EAAE;AAAE,WAAO,KAAK,CAAA;GAAE;;AAE/C,MAAI,MAAM,GAAG,UAAU,CAAA;AACvB,MAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAC/B,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,OAAO,IAC/B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACjC,WAAO,IAAI,CAAA;GACZ;;AAED,SAAO,KAAK,CAAA;CACb,CAAA","file":"index-compiled.js","sourcesContent":["\"use strict\"\nvar os = require(\"os\")\n\nvar hasUnicode = module.exports = function () {\n  // Recent Win32 platforms (>XP) CAN support unicode in the console but\n  // don't have to, and in non-english locales often use traditional local\n  // code pages. There's no way, short of windows system calls or execing\n  // the chcp command line program to figure this out. As such, we default\n  // this to false and encourage your users to override it via config if\n  // appropriate.\n  if (os.type() == \"Windows_NT\") { return false }\n\n  var isUTF8 = /[.]UTF-8/\n  if (isUTF8.test(process.env.LC_ALL)\n   || process.env.LC_CTYPE == 'UTF-8'\n   || isUTF8.test(process.env.LANG)) {\n    return true\n  }\n\n  return false\n}\n"]}