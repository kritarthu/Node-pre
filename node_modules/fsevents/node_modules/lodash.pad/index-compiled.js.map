{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * lodash 3.3.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar repeat = require('lodash.repeat'),\n    root = require('lodash._root');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  if (!(string && reHasComplexSymbol.test(string))) {\n    return string.length;\n  }\n  var result = reComplexSymbol.lastIndex = 0;\n  while (reComplexSymbol.test(string)) {\n    result++;\n  }\n  return result;\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return string.match(reComplexSymbol);\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeFloor = Math.floor;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = Symbol ? symbolProto.toString : undefined;\n\n/**\n * Creates the padding for `string` based on `length`. The `chars` string\n * is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {string} string The string to create padding for.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padding for `string`.\n */\nfunction createPadding(string, length, chars) {\n  length = toInteger(length);\n\n  var strLength = stringSize(string);\n  if (!length || strLength >= length) {\n    return '';\n  }\n  var padLength = length - strLength;\n  chars = chars === undefined ? ' ' : (chars + '');\n\n  var result = repeat(chars, nativeCeil(padLength / stringSize(chars)));\n  return reHasComplexSymbol.test(chars)\n    ? stringToArray(result).slice(0, padLength).join('')\n    : result.slice(0, padLength);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3');\n * // => 3\n */\nfunction toInteger(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  var remainder = value % 1;\n  return value === value ? (remainder ? value - remainder : value) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3);\n * // => 3\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3');\n * // => 3\n */\nfunction toNumber(value) {\n  if (isObject(value)) {\n    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (value == null) {\n    return '';\n  }\n  if (isSymbol(value)) {\n    return Symbol ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Pads `string` on the left and right sides if it's shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.pad('abc', 8);\n * // => '  abc   '\n *\n * _.pad('abc', 8, '_-');\n * // => '_-abc_-_'\n *\n * _.pad('abc', 3);\n * // => 'abc'\n */\nfunction pad(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = stringSize(string);\n  if (!length || strLength >= length) {\n    return string;\n  }\n  var mid = (length - strLength) / 2,\n      leftLength = nativeFloor(mid),\n      rightLength = nativeCeil(mid);\n\n  return createPadding('', leftLength, chars) + string + createPadding('', rightLength, chars);\n}\n\nmodule.exports = pad;\n"]}