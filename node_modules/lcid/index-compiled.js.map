{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACpC,IAAI,GAAG,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACjC,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;;AAE7B,OAAO,CAAC,IAAI,GAAG,UAAU,QAAQ,EAAE;AAClC,KAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AACjC,QAAM,IAAI,SAAS,CAAC,mBAAmB,CAAC,CAAC;EACzC;;AAED,QAAO,QAAQ,CAAC,QAAQ,CAAC,CAAC;CAC1B,CAAC;;AAEF,OAAO,CAAC,EAAE,GAAG,UAAU,QAAQ,EAAE;AAChC,KAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AACjC,QAAM,IAAI,SAAS,CAAC,mBAAmB,CAAC,CAAC;EACzC;;AAED,QAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;CACrB,CAAC;;AAEF,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC","file":"index-compiled.js","sourcesContent":["'use strict';\nvar invertKv = require('invert-kv');\nvar all = require('./lcid.json');\nvar inverted = invertKv(all);\n\nexports.from = function (lcidCode) {\n\tif (typeof lcidCode !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n\n\treturn inverted[lcidCode];\n};\n\nexports.to = function (localeId) {\n\tif (typeof localeId !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn all[localeId];\n};\n\nexports.all = all;\n"]}