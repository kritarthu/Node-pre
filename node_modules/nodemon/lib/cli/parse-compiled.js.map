{"version":3,"sources":["parse.js"],"names":[],"mappings":"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","file":"parse-compiled.js","sourcesContent":["/*\n\nnodemon is a utility for node, and replaces the use of the executable\nnode. So the user calls `nodemon foo.js` instead.\n\nnodemon can be run in a number of ways:\n\n`nodemon` - tries to use package.json#main property to run\n`nodemon` - if no package, looks for index.js\n`nodemon app.js` - runs app.js\n`nodemon --arg app.js --apparg` - eats arg1, and runs app.js with apparg\n`nodemon --apparg` - as above, but passes apparg to package.json#main (or\n  index.js)\n`nodemon --debug app.js\n\n*/\n\nvar fs = require('fs');\nvar path = require('path');\nvar existsSync = fs.existsSync || path.existsSync;\n\nmodule.exports = parse;\n\n/**\n * Parses the command line arguments `process.argv` and returns the\n * nodemon options, the user script and the executable script.\n *\n * @param  {Array} full process arguments, including `node` leading arg\n * @return {Object} { options, script, args }\n */\nfunction parse(argv) {\n  if (typeof argv === 'string') {\n    argv = argv.split(' ');\n  }\n\n  var eat = function (i, args) {\n    if (i <= args.length) {\n      return args.splice(i + 1, 1).pop();\n    }\n  };\n\n  var args = argv.slice(2);\n  var script = null;\n  var nodemonOptions = { scriptPosition: null };\n\n  var nodemonOpt = nodemonOption.bind(null, nodemonOptions);\n  var lookForArgs = true;\n\n  // move forward through the arguments\n  for (var i = 0; i < args.length; i++) {\n    // if the argument looks like a file, then stop eating\n    if (!script) {\n      if (args[i] === '.' || existsSync(args[i])) {\n        script = args.splice(i, 1).pop();\n\n        // we capture the position of the script because we'll reinsert it in\n        // the right place in run.js:command (though I'm not sure we should even\n        // take it out of the array in the first place, but this solves passing\n        // arguments to the exec process for now).\n        nodemonOptions.scriptPosition = i;\n        i--;\n        continue;\n      }\n    }\n\n    if (lookForArgs) {\n      // respect the standard way of saying: hereafter belongs to my script\n      if (args[i] === '--') {\n        args.splice(i, 1);\n        // cycle back one argument, as we just ate this one up\n        i--;\n\n        // ignore all further nodemon arguments\n        lookForArgs = false;\n\n        // move to the next iteration\n        continue;\n      }\n\n      if (nodemonOpt(args[i], eat.bind(null, i, args)) !== false) {\n        args.splice(i, 1);\n        // cycle back one argument, as we just ate this one up\n        i--;\n      }\n    }\n  }\n\n  if (script === null && !nodemonOptions.exec) {\n    var found = findAppScript();\n    if (found !== null) {\n      if (found.exec) {\n        nodemonOptions.exec = found.exec;\n      }\n      script = found.script;\n      nodemonOptions.scriptPosition = args.length;\n    }\n  }\n\n  nodemonOptions.script = script;\n  nodemonOptions.args = args;\n\n  return nodemonOptions;\n}\n\n\n/**\n * Given an argument (ie. from process.argv), sets nodemon\n * options and can eat up the argument value\n *\n * @param {Object} options object that will be updated\n * @param {Sting} current argument from argv\n * @param {Function} the callback to eat up the next argument in argv\n * @return {Boolean} false if argument was not a nodemon arg\n */\nfunction nodemonOption(options, arg, eatNext) {\n  // line seperation on purpose to help legibility\n  if (arg === '--help' || arg === '-h' || arg === '-?') {\n    var help = eatNext();\n    options.help = help ? help : true;\n  } else\n\n  if (arg === '--version' || arg === '-v') {\n    options.version = true;\n  } else\n\n  if (arg === '--dump') {\n    options.dump = true;\n  } else\n\n  if (arg === '--verbose' || arg === '-V') {\n    options.verbose = true;\n  } else\n\n  if (arg === '--legacy-watch' || arg === '-L') {\n    options.legacyWatch = true;\n  } else\n\n  if (arg === '--polling-interval' || arg === '-P') {\n    options.pollingInterval = parseInt(eatNext(), 10);\n  } else\n\n  // Depricated as this is \"on\" by default\n  if (arg === '--js') {\n    options.js = true;\n  } else\n\n  if (arg === '--quiet' || arg === '-q') {\n    options.quiet = true;\n  } else\n\n  if (arg === '--hidden') { // TODO document this flag?\n    options.hidden = true;\n  } else\n\n  if (arg === '--watch' || arg === '-w') {\n    if (!options.watch) { options.watch = []; }\n    options.watch.push(eatNext());\n  } else\n\n  if (arg === '--ignore' || arg === '-i') {\n    if (!options.ignore) { options.ignore = []; }\n    options.ignore.push(eatNext());\n  } else\n\n  if (arg === '--exitcrash') {\n    options.exitcrash = true;\n  } else\n\n  if (arg === '--delay' || arg === '-d') {\n    options.delay = parseDelay(eatNext());\n  } else\n\n  if (arg === '--exec' || arg === '-x') {\n    options.exec = eatNext();\n  } else\n\n  if (arg === '--no-stdin' || arg === '-I') {\n    options.stdin = false;\n  } else\n\n  if (arg === '--on-change-only' || arg === '-C') {\n    options.runOnChangeOnly = true;\n  } else\n\n  if (arg === '--ext' || arg === '-e') {\n    options.ext = eatNext();\n  } else\n\n  if (arg === '--no-colours' || arg === '--no-colors') {\n    options.colours = false;\n  } else\n\n  if (arg === '--cwd') {\n    options.cwd = eatNext();\n\n    // go ahead and change directory. This is primarily for nodemon tools like\n    // grunt-nodemon - we're doing this early because it will affect where the\n    // user script is searched for.\n    process.chdir(path.resolve(options.cwd));\n  } else {\n\n    // this means we didn't match\n    return false;\n  }\n}\n\nfunction findAppScript() {\n  // nodemon has been run alone, so try to read the package file\n  // or try to read the index.js file\n  if (existsSync('./index.js')) {\n    return { exec: null, script: 'index.js' };\n  }\n\n  return null;\n}\n\n/**\n * Given an argument (ie. from nodemonOption()), will parse and return the\n * equivalent millisecond value or 0 if the argument cannot be parsed\n *\n * @param {String} argument value given to the --delay option\n * @return {Number} millisecond equivalent of the argument\n */\nfunction parseDelay(value) {\n  var millisPerSecond = 1000;\n  var millis = 0;\n\n  if (value.match(/^\\d*ms$/)) {\n    // Explicitly parse for milliseconds when using ms time specifier\n    millis = parseInt(value, 10);\n  } else {\n    // Otherwise, parse for seconds, with or without time specifier then convert\n    millis = parseFloat(value) * millisPerSecond;\n  }\n\n  return isNaN(millis) ? 0 : millis;\n}\n\n"]}