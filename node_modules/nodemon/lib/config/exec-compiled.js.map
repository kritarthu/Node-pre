{"version":3,"sources":["exec.js"],"names":[],"mappings":"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","file":"exec-compiled.js","sourcesContent":["var path = require('path');\nvar utils = require('../utils');\n\nmodule.exports = exec;\n\n/**\n * Reads the cwd/package.json file and looks to see if it can load a script\n * and possibly an exec first from package.main, then package.start.\n *\n * @return {Object} exec & script if found\n */\nfunction execFromPackage() {\n  // doing a try/catch because we can't use the path.exist callback pattern\n  // or we could, but the code would get messy, so this will do exactly\n  // what we're after - if the file doesn't exist, it'll throw.\n  try {\n    // note: this isn't nodemon's package, it's the user's cwd package\n    var pkg = require(path.join(process.cwd(), 'package.json'));\n    if (pkg.main !== undefined) {\n      // no app found to run - so give them a tip and get the feck out\n      return { exec: null, script: pkg.main };\n    } else if (pkg.scripts && pkg.scripts.start) {\n      return { exec: pkg.scripts.start };\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction replace(map, str) {\n  var re = new RegExp('{{(' + Object.keys(map).join('|') + ')}}');\n  return str.replace(re, function (all, m) {\n    return map[m] || all || '';\n  });\n}\n\n\n/**\n * Discovers all the options required to run the script\n * and if a custom exec has been passed in, then it will\n * also try to work out what extensions to monitor and\n * whether there's a special way of running that script.\n *\n * @param  {Object} nodemonOptions\n * @param  {Object} execMap\n * @return {Object} new and updated version of nodemonOptions\n */\nfunction exec(nodemonOptions, execMap) {\n  if (!execMap) {\n    execMap = {};\n  }\n\n  // if there's no exec found yet, then try to read it from the local\n  // package.json this logic used to sit in the cli/parse, but actually the cli\n  // should be parsed first, then the user options (via nodemon.json) then\n  // finally default down to pot shots at the directory via package.json\n  if (!nodemonOptions.exec && !nodemonOptions.script) {\n    var found = execFromPackage();\n    if (found !== null) {\n      if (found.exec) {\n        nodemonOptions.exec = found.exec;\n      }\n      if (!nodemonOptions.script) {\n        nodemonOptions.script = found.script;\n      }\n      if (Array.isArray(nodemonOptions.args) &&\n        nodemonOptions.scriptPosition === null) {\n        nodemonOptions.scriptPosition = nodemonOptions.args.length;\n      }\n    }\n  }\n\n  var options = utils.clone(nodemonOptions || {});\n  var script = path.basename(options.script || '');\n  var scriptExt = path.extname(script).slice(1);\n  var extension = options.ext || (scriptExt ? scriptExt + ',json' : 'js,json');\n  var execDefined = !!options.exec;\n\n  // allows the user to simplify cli usage:\n  // https://github.com/remy/nodemon/issues/195\n  // but always give preference to the user defined argument\n  if (!options.exec && execMap[scriptExt] !== undefined) {\n    options.exec = execMap[scriptExt];\n    execDefined = true;\n  }\n\n  options.execArgs = [];\n\n  if (Array.isArray(options.exec)) {\n    options.execArgs = options.exec;\n    options.exec = options.execArgs.shift();\n  }\n\n  if (options.exec === undefined) {\n    options.exec = 'node';\n  } else {\n    // allow variable substitution for {{filename}} and {{pwd}}\n    var substitution = replace.bind(null, {\n      filename: options.script,\n      pwd: process.cwd(),\n    });\n\n    var newExec = substitution(options.exec);\n    if (newExec !== options.exec &&\n      options.exec.indexOf('{{filename}}') !== -1) {\n      options.script = null;\n    }\n    options.exec = newExec;\n\n    var newExecArgs = options.execArgs.map(substitution);\n    if (newExecArgs.join('') !== options.execArgs.join('')) {\n      options.execArgs = newExecArgs;\n      delete options.script;\n    }\n  }\n\n\n  if (options.exec === 'node' && options.nodeArgs && options.nodeArgs.length) {\n    options.execArgs = options.execArgs.concat(options.nodeArgs);\n  }\n\n  // note: indexOf('coffee') handles both .coffee and .litcoffee\n  if (!execDefined && options.exec === 'node' &&\n    scriptExt.indexOf('coffee') !== -1) {\n    options.exec = 'coffee';\n\n    // we need to get execArgs set before the script\n    // for example, in `nodemon --debug my-script.coffee --my-flag`, debug is an\n    // execArg, while my-flag is a script arg\n    var leadingArgs = (options.args || []).splice(0, options.scriptPosition);\n    options.execArgs = options.execArgs.concat(leadingArgs);\n    options.scriptPosition = 0;\n\n    if (options.execArgs.length > 0) {\n      // because this is the coffee executable, we need to combine the exec args\n      // into a single argument after the nodejs flag\n      options.execArgs = ['--nodejs', options.execArgs.join(' ')];\n    }\n  }\n\n  if (options.exec === 'coffee') {\n    // don't override user specified extension tracking\n    if (!options.ext) {\n      extension = 'coffee,litcoffee,js,json';\n    }\n\n    // because windows can't find 'coffee', it needs the real file 'coffee.cmd'\n    if (utils.isWindows) {\n      options.exec += '.cmd';\n    }\n  }\n\n  // allow users to make a mistake on the extension to monitor\n  // converts .js, jade => js,jade\n  // BIG NOTE: user can't do this: nodemon -e *.js\n  // because the terminal will automatically expand the glob against\n  // the file system :(\n  extension = (extension.match(/[^,.\\s]+/g) || []).join(',');\n\n  options.ext = extension;\n\n  options.env = {};\n  // make sure it's an object (and since we don't have )\n  if (({}).toString.apply(nodemonOptions.env) === '[object Object]') {\n    options.env = utils.clone(nodemonOptions.env);\n  } else if (nodemonOptions.env !== undefined) {\n    throw new Error('nodemon env values must be an object: { PORT: 8000 }');\n  }\n\n  return options;\n}\n"]}