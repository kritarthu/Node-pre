{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * Manages the internal config of nodemon, checking for the state of support\n * with fs.watch, how nodemon can watch files (using find or fs methods).\n *\n * This is *not* the user's config.\n */\nvar debug = require('debug')('nodemon');\nvar load = require('./load');\nvar rules = require('../rules');\nvar utils = require('../utils');\nvar pinVersion = require('../version').pin;\nvar command = require('./command');\nvar rulesToMonitor = require('../monitor/match').rulesToMonitor;\nvar bus = utils.bus;\n\nfunction reset() {\n  rules.reset();\n\n  config.dirs = [];\n  config.options = { ignore: [], watch: [] };\n  config.lastStarted = 0;\n  config.loaded = [];\n}\n\nvar config = {\n  run: false,\n  system: {\n    cwd: process.cwd(),\n  },\n  required: false,\n  dirs: [],\n  timeout: 1000,\n  options: {},\n};\n\n/**\n * Take user defined settings, then detect the local machine capability, then\n * look for local and global nodemon.json files and merge together the final\n * settings with the config for nodemon.\n *\n * @param  {Object} settings user defined settings for nodemon (typically on\n *  the cli)\n * @param  {Function} ready callback fired once the config is loaded\n */\nconfig.load = function (settings, ready) {\n  reset();\n  var config = this;\n  load(settings, config.options, config, function (options) {\n    config.options = options;\n\n    if (options.watch.length === 0) {\n      // this is to catch when the watch is left blank\n      options.watch.push('*.*');\n    }\n\n    if (options['watch_interval']) { // jshint ignore:line\n      options.watchInterval = options['watch_interval']; // jshint ignore:line\n    }\n\n    config.watchInterval = options.watchInterval || null;\n\n    var cmd = command(config.options);\n    config.command = {\n      raw: cmd,\n      string: utils.stringify(cmd.executable, cmd.args),\n    };\n\n    // now run automatic checks on system adding to the config object\n    options.monitor = rulesToMonitor(options.watch, options.ignore, config);\n\n    var cwd = process.cwd();\n    debug('config: dirs', config.dirs);\n    if (config.dirs.length === 0) {\n      config.dirs.unshift(cwd);\n    }\n\n    bus.emit('config:update', config);\n    pinVersion().then(function () {\n      ready(config);\n    });\n  });\n};\n\nconfig.reset = reset;\n\nmodule.exports = config;"]}