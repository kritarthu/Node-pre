{"version":3,"sources":["run.js"],"names":[],"mappings":"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","file":"run-compiled.js","sourcesContent":["var debug = require('debug')('nodemon');\nvar utils = require('../utils');\nvar bus = utils.bus;\nvar childProcess = require('child_process');\nvar spawn = childProcess.spawn;\nvar exec = childProcess.exec;\nvar watch = require('./watch').watch;\nvar config = require('../config');\nvar child = null; // the actual child process we spawn\nvar killedAfterChange = false;\nvar noop = function () {};\nvar restart = null;\nvar psTree = require('ps-tree');\nvar hasPS = true;\n\n// discover if the OS has `ps`, and therefore can use psTree\nexec('ps', function (error) {\n  if (error) {\n    hasPS = false;\n  }\n});\n\nfunction run(options) {\n  var cmd = config.command.raw;\n\n  var runCmd = !options.runOnChangeOnly || config.lastStarted !== 0;\n  if (runCmd) {\n    utils.log.status('starting `' + config.command.string + '`');\n  }\n\n  /*jshint validthis:true*/\n  restart = run.bind(this, options);\n  run.restart = restart;\n\n  config.lastStarted = Date.now();\n\n  var stdio = ['pipe', 'pipe', 'pipe'];\n\n  if (config.options.stdout) {\n    stdio = ['pipe', process.stdout, process.stderr];\n  }\n\n  var sh = 'sh';\n  var shFlag = '-c';\n\n  if (utils.isWindows) {\n    sh = 'cmd';\n    shFlag = '/c';\n  }\n\n  var executable = cmd.executable;\n\n  // special logic for windows, as spaces in the paths need the path fragment\n  // quoted, so it reads: c:\\\"Program Files\"\\nodejs\\node.exe\n  if (utils.isWindows && executable.indexOf(' ') !== -1) {\n    var re = /\\\\((\\w+\\s+)+\\w+)(?=([\\\\\\.]))(?=([^\"]*\"[^\"]*\")*[^\"]*$)/g;\n    executable = executable.replace(re, '\\\\\"$1\"');\n  }\n\n  var args = runCmd ? utils.stringify(executable, cmd.args) : ':';\n  var spawnArgs = [sh, [shFlag, args]];\n  debug('spawning', args);\n\n  if (utils.version.major === 0 && utils.version.minor < 8) {\n    // use the old spawn args :-\\\n  } else {\n    spawnArgs.push({\n      env: utils.merge(options.execOptions.env, process.env),\n      stdio: stdio,\n    });\n  }\n\n  child = spawn.apply(null, spawnArgs);\n\n  if (config.required) {\n    var emit = {\n      stdout: function (data) {\n        bus.emit('stdout', data);\n      },\n      stderr: function (data) {\n        bus.emit('stderr', data);\n      },\n    };\n\n    // now work out what to bind to...\n    if (config.options.stdout) {\n      child.on('stdout', emit.stdout).on('stderr', emit.stderr);\n    } else {\n      child.stdout.on('data', emit.stdout);\n      child.stderr.on('data', emit.stderr);\n\n      bus.stdout = child.stdout;\n      bus.stderr = child.stderr;\n    }\n  }\n\n  bus.emit('start');\n\n  utils.log.detail('child pid: ' + child.pid);\n\n  child.on('error', function (error) {\n    bus.emit('error', error);\n    if (error.code === 'ENOENT') {\n      utils.log.error('unable to run executable: \"' + cmd.executable + '\"');\n      process.exit(1);\n    } else {\n      utils.log.error('failed to start child process: ' + error.code);\n      throw error;\n    }\n  });\n\n  child.on('exit', function (code, signal) {\n    if (code === 127) {\n      utils.log.error('failed to start process, \"' + cmd.executable +\n        '\" exec not found');\n      bus.emit('error', code);\n      process.exit();\n    }\n\n    if (code === 2) {\n      // something wrong with parsed command\n      utils.log.error('failed to start process, possible issue with exec ' +\n        'arguments');\n      bus.emit('error', code);\n      process.exit();\n    }\n\n    // In case we killed the app ourselves, set the signal thusly\n    if (killedAfterChange) {\n      killedAfterChange = false;\n      signal = 'SIGUSR2';\n    }\n    // this is nasty, but it gives it windows support\n    if (utils.isWindows && signal === 'SIGTERM') {\n      signal = 'SIGUSR2';\n    }\n\n    if (signal === 'SIGUSR2' || code === 0) {\n      // this was a clean exit, so emit exit, rather than crash\n      debug('bus.emit(exit) via SIGUSR2');\n      bus.emit('exit');\n\n      // exit the monitor, but do it gracefully\n      if (signal === 'SIGUSR2') {\n        return restart();\n      } else if (code === 0) { // clean exit - wait until file change to restart\n        if (runCmd) {\n          utils.log.status('clean exit - waiting for changes before restart');\n        }\n        child = null;\n      }\n    } else {\n      bus.emit('crash');\n      if (options.exitcrash) {\n        utils.log.fail('app crashed');\n        if (!config.required) {\n          process.exit(0);\n        }\n      } else {\n        utils.log.fail('app crashed - waiting for file changes before' +\n        ' starting...');\n        child = null;\n      }\n    }\n\n    if (config.options.restartable) {\n      // stdin needs to kick in again to be able to listen to the\n      // restart command\n      process.stdin.resume();\n    }\n  });\n\n  run.kill = function (noRestart, callback) {\n    // I hate code like this :(  - Remy (author of said code)\n    if (typeof noRestart === 'function') {\n      callback = noRestart;\n      noRestart = false;\n    }\n\n    if (!callback) {\n      callback = noop;\n    }\n\n    if (child !== null) {\n      // if the stdin piping is on, we need to unpipe, but also close stdin on\n      // the child, otherwise linux can throw EPIPE or ECONNRESET errors.\n      if (options.stdin) {\n        if (process.stdin.unpipe) { // node > 0.8\n          process.stdin.unpipe(child.stdin);\n        }\n      }\n\n      if (utils.isWindows) {\n        // For the on('exit', ...) handler above the following looks like a\n        // crash, so we set the killedAfterChange flag\n        killedAfterChange = true;\n      }\n\n      /* Now kill the entire subtree of processes belonging to nodemon */\n      var oldPid = child.pid;\n      if (child) {\n        kill(child, 'SIGUSR2', function () {\n          // this seems to fix the 0.11.x issue with the \"rs\" restart command,\n          // though I'm unsure why. it seems like more data is streamed in to\n          // stdin after we close.\n          if (child && options.stdin && oldPid === child.pid) {\n            // this is stupid and horrible, but node 0.12 on windows blows up\n            // with this line, so we'll skip it entirely.\n            if (!utils.isWindows) {\n              child.stdin.end();\n            }\n          }\n          callback();\n        });\n      }\n    } else if (!noRestart) {\n      // if there's no child, then we need to manually start the process\n      // this is because as there was no child, the child.on('exit') event\n      // handler doesn't exist which would normally trigger the restart.\n      bus.once('start', callback);\n      restart();\n    } else {\n      callback();\n    }\n  };\n\n  // connect stdin to the child process (options.stdin is on by default)\n  if (options.stdin) {\n    process.stdin.resume();\n    process.stdin.setEncoding('utf8');\n    process.stdin.pipe(child.stdin);\n\n    bus.once('exit', function () {\n      if (child && process.stdin.unpipe) { // node > 0.8\n        process.stdin.unpipe(child.stdin);\n      }\n    });\n  }\n\n  debug('start watch on: %s', config.options.watch);\n  if (config.options.watch !== false) {\n    watch();\n  }\n}\n\nfunction kill(child, signal, callback) {\n  if (!callback) {\n    callback = function () {};\n  }\n\n  if (utils.isWindows) {\n    // When using CoffeeScript under Windows, child's process is not node.exe\n    // Instead coffee.cmd is launched, which launches cmd.exe, which starts\n    // node.exe as a child process child.kill() would only kill cmd.exe, not\n    // node.exe\n    // Therefore we use the Windows taskkill utility to kill the process and all\n    // its children (/T for tree).\n    // Force kill (/F) the whole child tree (/T) by PID (/PID 123)\n    exec('taskkill /pid ' + child.pid + ' /T /F');\n    callback();\n  } else {\n    if (hasPS) {\n      // we use psTree to kill the full subtree of nodemon, because when\n      // spawning processes like `coffee` under the `--debug` flag, it'll spawn\n      // it's own child, and that can't be killed by nodemon, so psTree gives us\n      //  an array of PIDs that have spawned under nodemon, and we send each the\n      //   SIGUSR2 signal, which fixes #335\n      psTree(child.pid, function (err, kids) {\n        spawn('kill', ['-s', signal, child.pid].concat(kids.map(function (p) {\n          return p.PID;\n        }))).on('close', callback);\n      });\n    } else {\n      exec('kill -s ' + signal + ' ' + child.pid, function () {\n        // ignore if the process has been killed already\n        callback();\n      });\n    }\n  }\n}\n\n// stubbed out for now, filled in during run\nrun.kill = function (flag, callback) {\n  if (callback) {\n    callback();\n  }\n};\nrun.restart = noop;\n\nbus.on('quit', function onQuit() {\n  // remove event listener\n  var exitTimer = null;\n  var exit = function () {\n    clearTimeout(exitTimer);\n    exit = noop; // null out in case of race condition\n    child = null;\n    if (!config.required) {\n      // Execute all other quit listeners.\n      bus.listeners('quit').forEach(function (listener) {\n        if (listener !== onQuit) {\n          listener();\n        }\n      });\n      process.exit(0);\n    } else {\n      bus.emit('exit');\n    }\n  };\n\n  // if we're not running already, don't bother with trying to kill\n  if (config.run === false) {\n    return exit();\n  }\n\n  // immediately try to stop any polling\n  config.run = false;\n\n  if (child) {\n    // give up waiting for the kids after 10 seconds\n    exitTimer = setTimeout(exit, 10 * 1000);\n    child.removeAllListeners('exit');\n    child.once('exit', exit);\n\n    kill(child, 'SIGINT');\n  } else {\n    exit();\n  }\n});\n\nbus.on('restart', function () {\n  // run.kill will send a SIGINT to the child process, which will cause it\n  // to terminate, which in turn uses the 'exit' event handler to restart\n  run.kill();\n});\n\n// remove the flag file on exit\nprocess.on('exit', function () {\n  utils.log.detail('exiting');\n  if (child) { child.kill(); }\n});\n\n// because windows borks when listening for the SIG* events\nif (!utils.isWindows) {\n  // usual suspect: ctrl+c exit\n  process.once('SIGINT', function () {\n    bus.emit('quit');\n  });\n\n  process.once('SIGTERM', function () {\n    bus.emit('quit');\n    if (child) { child.kill('SIGTERM'); }\n    process.exit(0);\n  });\n}\n\n\nmodule.exports = run;\n"]}