{"version":3,"sources":["spawn.js"],"names":[],"mappings":";;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC/B,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AACxB,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;AACpB,IAAI,YAAY,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC5C,IAAI,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC;;AAEhC,MAAM,CAAC,OAAO,GAAG,SAAS,KAAK,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE;AAC1D,MAAI,KAAK,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AACrC,MAAI,KAAK,GAAG,IAAI,CAAC;;AAEjB,MAAI,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE;AACzB,SAAK,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;GAClD;;AAED,MAAI,EAAE,GAAG,IAAI,CAAC;AACd,MAAI,MAAM,GAAG,IAAI,CAAC;;AAElB,MAAI,KAAK,CAAC,SAAS,EAAE;AACnB,MAAE,GAAG,KAAK,CAAC;AACX,UAAM,GAAG,IAAI,CAAC;GACf;;AAED,MAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,MAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AAC3B,WAAO,GAAG,CAAC,OAAO,CAAC,CAAC;GACrB;;AAED,MAAI,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAEzB,MAAI,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,EAAE;AACxD,QAAI,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACzD,SAAK,GAAG,MAAM,CAAC,EAAE,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;AACjC,SAAG,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC;AAC/C,WAAK,EAAE,KAAK;KACb,CAAC,CAAC;GACJ,MAAM;AACL,SAAK,GAAG,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;GACzB;;AAED,MAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,QAAI,IAAI,GAAG;AACT,YAAM,EAAE,gBAAU,IAAI,EAAE;AACtB,WAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;OAC1B;AACD,YAAM,EAAE,gBAAU,IAAI,EAAE;AACtB,WAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;OAC1B;KACF,CAAC;;;AAGF,QAAI,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE;AACzB,WAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3D,MAAM;AACL,WAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACrC,WAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;;AAErC,SAAG,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AAC1B,SAAG,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;KAC3B;GACF;CACF,CAAC","file":"spawn-compiled.js","sourcesContent":["var utils = require('./utils');\nvar merge = utils.merge;\nvar bus = utils.bus;\nvar childProcess = require('child_process');\nvar _spawn = childProcess.spawn;\n\nmodule.exports = function spawn(command, config, eventArgs) {\n  var stdio = ['pipe', 'pipe', 'pipe'];\n  var child = null;\n\n  if (config.options.stdout) {\n    stdio = ['pipe', process.stdout, process.stderr];\n  }\n\n  var sh = 'sh';\n  var shFlag = '-c';\n\n  if (utils.isWindows) {\n    sh = 'cmd';\n    shFlag = '/c';\n  }\n\n  var args = '';\n\n  if (!Array.isArray(command)) {\n    command = [command];\n  }\n\n  args = command.join(' ');\n\n  if (utils.version.major >= 1 || utils.version.minor >= 8) {\n    var env = merge(process.env, { FILENAME: eventArgs[0] });\n    child = _spawn(sh, [shFlag, args], {\n      env: merge(config.options.execOptions.env, env),\n      stdio: stdio,\n    });\n  } else {\n    child = spawn(sh, args);\n  }\n\n  if (config.required) {\n    var emit = {\n      stdout: function (data) {\n        bus.emit('stdout', data);\n      },\n      stderr: function (data) {\n        bus.emit('stderr', data);\n      },\n    };\n\n    // now work out what to bind to...\n    if (config.options.stdout) {\n      child.on('stdout', emit.stdout).on('stderr', emit.stderr);\n    } else {\n      child.stdout.on('data', emit.stdout);\n      child.stderr.on('data', emit.stderr);\n\n      bus.stdout = child.stdout;\n      bus.stderr = child.stderr;\n    }\n  }\n};\n"]}