{"version":3,"sources":["version.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;AACzB,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;;AAEzB,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC;AACzC,IAAI,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC;AAC7C,IAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,SAAS,GAAG,GAAG;AACb,SAAO,OAAO,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACjC,WAAO,CAAC,MAAM,GAAG,CAAC,CAAC;GACpB,CAAC,CAAC;CACJ;;AAED,SAAS,OAAO,CAAC,QAAQ,EAAE;;AAEzB,MAAI,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAC5D,IAAI,CAAC,UAAU,GAAG,EAAE;;AAErB,QAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC;;AAE3D,QAAI,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE;AACtB,aAAO,CAAC,CAAC;KACV;;AAED,QAAI,GAAG,GAAG,CAAC;;;;AAIX,QAAI,QAAQ,GAAG,CACb,MAAM,EAAE,SAAM,CAAC,YAAY;AAAE,aAAO,QAAQ,CAAC;KAAE,CAAC,EAChD,MAAM,EAAE,SAAM,CAAC,YAAY;AAAE,aAAO,QAAQ,CAAC;KAAE,CAAC,EAChD,KAAK,EAAE,SAAM,CAAC,YAAY;AAAE,aAAO,CAAC,CAAC;KAAE,CAAC,CACzC,CAAC;;;AAGF,WAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AAC/C,UAAI,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACpB,UAAI,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACpB,UAAI,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACtC,UAAI,IAAI,GAAG,MAAM,GAAG,IAAI,GAAG,MAAM,CAAC;AAClC,UAAI,UAAU,KAAK,CAAC,EAAE;AACpB,YAAI,IAAI,IAAI,GAAG,UAAU,GAAG,eAAe,CAAC;OAC7C;;AAED,aAAO,IAAI,CAAC;KACb,CAAC,CAAC;GACJ,CAAC,SAAM,CAAC,UAAU,KAAK,EAAE;AACxB,WAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACzB,UAAM,KAAK,CAAC;GACb,CAAC,CAAC;;AAEH,MAAI,QAAQ,EAAE;AACZ,WAAO,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AAC1B,cAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KACrB,EAAE,QAAQ,CAAC,CAAC;GACd;;AAED,SAAO,OAAO,CAAC;CAChB;;AAED,SAAS,WAAW,CAAC,GAAG,EAAE;AACxB,MAAI,GAAG,KAAK,GAAG,EAAE;AACf,WAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;GACvD;AACD,SAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE;AACpC,MAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,EAAE,UAAU,KAAK,EAAE,MAAM,EAAE;AAClE,UAAI,KAAK,IAAI,CAAC,MAAM,EAAE;AACpB,eAAO,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;OACtD;;AAED,aAAO,CAAC,GAAG,CAAC,CAAC;KACd,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ;;AAED,SAAS,OAAO,CAAC,GAAG,EAAE;AACpB,SAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC5C,QAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE;AACtD,UAAI,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AAC1B,UAAI,KAAK,EAAE;AACT,eAAO,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;OACjC;AACD,aAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;KACtC,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ;;AAED,SAAS,MAAM,GAAG;AAChB,SAAO,OAAO,CAAC,oBAAoB,CAAC,CAAC;CACtC;;AAED,SAAS,MAAM,GAAG;AAChB,SAAO,OAAO,CAAC,iCAAiC,CAAC,CAAC;CACnD;;AAED,SAAS,KAAK,GAAG;AACf,SAAO,OAAO,CAAC,6CAA6C,GACxD,0BAA0B,CAAC,CAAC;CACjC","file":"version-compiled.js","sourcesContent":["module.exports = version;\nmodule.exports.pin = pin;\n\nvar fs = require('fs');\nvar path = require('path');\nvar exec = require('child_process').exec;\nvar Promise = require('es6-promise').Promise; // jshint ignore:line\nvar root = null;\n\nfunction pin() {\n  return version().then(function (v) {\n    version.pinned = v;\n  });\n}\n\nfunction version(callback) {\n  // first find the package.json as this will be our root\n  var promise = findPackage(path.dirname(module.parent.filename))\n    .then(function (dir) {\n    // now try to load the package\n    var v = require(path.resolve(dir, 'package.json')).version;\n\n    if (v && v !== '0.0.0') {\n      return v;\n    }\n\n    root = dir;\n\n    // else we're in development, give the commit out\n    // get the last commit and whether the working dir is dirty\n    var promises = [\n      branch().catch(function () { return 'master'; }),\n      commit().catch(function () { return '<none>'; }),\n      dirty().catch(function () { return 0; }),\n    ];\n\n    // use the cached result as the export\n    return Promise.all(promises).then(function (res) {\n      var branch = res[0];\n      var commit = res[1];\n      var dirtyCount = parseInt(res[2], 10);\n      var curr = branch + ': ' + commit;\n      if (dirtyCount !== 0) {\n        curr += ' (' + dirtyCount + ' dirty files)';\n      }\n\n      return curr;\n    });\n  }).catch(function (error) {\n    console.log(error.stack);\n    throw error;\n  });\n\n  if (callback) {\n    promise.then(function (res) {\n      callback(null, res);\n    }, callback);\n  }\n\n  return promise;\n}\n\nfunction findPackage(dir) {\n  if (dir === '/') {\n    return Promise.reject(new Error('package not found'));\n  }\n  return new Promise(function (resolve) {\n    fs.stat(path.resolve(dir, 'package.json'), function (error, exists) {\n      if (error || !exists) {\n        return resolve(findPackage(path.resolve(dir, '..')));\n      }\n\n      resolve(dir);\n    });\n  });\n}\n\nfunction command(cmd) {\n  return new Promise(function (resolve, reject) {\n    exec(cmd, { cwd: root }, function (err, stdout, stderr) {\n      var error = stderr.trim();\n      if (error) {\n        return reject(new Error(error));\n      }\n      resolve(stdout.split('\\n').join(''));\n    });\n  });\n}\n\nfunction commit() {\n  return command('git rev-parse HEAD');\n}\n\nfunction branch() {\n  return command('git rev-parse --abbrev-ref HEAD');\n}\n\nfunction dirty() {\n  return command('expr $(git status --porcelain 2>/dev/null| ' +\n      'egrep \"^(M| M)\" | wc -l)');\n}"]}