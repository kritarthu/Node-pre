{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,KAAK;IACtC,EAAE,GAAM,OAAO,CAAC,cAAc,CAAC,CAAC;;AAEpC,MAAM,CAAC,OAAO,GAAG,SAAS,aAAa,CAAC,GAAG,EAAE,QAAQ,EAAE;AACrD,MAAI,OAAO,GAAG,IAAI,CAAC;;AAEnB,MAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;AAClC,UAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;GAClE;;AAED,MAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC3B,OAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;GACtB;;AAED,IAAE,CAAC,OAAO,CACR,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,oBAAoB,CAAC,CAAC,CAAC,MAAM,EACtD,EAAE,CAAC,KAAK,EAAE,EACV,EAAE,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,EAAE,EAAE;;AACzB,QAAI,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACvC,QAAI,CAAC,OAAO,EAAE;AACZ,aAAO,GAAG,OAAO,CAAC;AAClB,aAAO,EAAE,EAAE,CAAC;KACb;;AAED,QAAI,GAAG,GAAG,EAAE,CAAC;;AAEb,QAAI,CAAC,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;AACxB,WAAO,CAAC,CAAC,MAAM,EAAE;AACf,SAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACjE;;AAED,WAAO,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;GACtB,CAAC,EACF,EAAE,CAAC,UAAU,CAAC,UAAU,GAAG,EAAE,EAAE,EAAE;AAC/B,QAAI,OAAO,GAAG,CAAC,GAAG,CAAC;QACf,QAAQ,GAAG,EAAE,CAAC;;AAElB,MAAE,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AACzB,UAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACrC,eAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AACtB,gBAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;OACpB;KACF,CAAC,CAAC;;AAEH,YAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;GAC1B,CAAC,CACH,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAA;CACxB,CAAA","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar spawn = require('child_process').spawn,\n    es    = require('event-stream');\n\nmodule.exports = function childrenOfPid(pid, callback) {\n  var headers = null;\n\n  if (typeof callback !== 'function') {\n    throw new Error('childrenOfPid(pid, callback) expects callback');\n  }\n\n  if (typeof pid === 'number') {\n    pid = pid.toString();\n  }\n\n  es.connect(\n    spawn('ps', ['-A', '-o', 'ppid,pid,stat,comm']).stdout,\n    es.split(),\n    es.map(function (line, cb) { //this could parse alot of unix command output\n      var columns = line.trim().split(/\\s+/);\n      if (!headers) {\n        headers = columns;\n        return cb();\n      }\n\n      var row = {};\n      // For each header\n      var h = headers.slice();\n      while (h.length) {\n        row[h.shift()] = h.length ? columns.shift() : columns.join(' ');\n      }\n\n      return cb(null, row);\n    }),\n    es.writeArray(function (err, ps) {\n      var parents = [pid],\n          children = [];\n\n      ps.forEach(function (proc) {\n        if (parents.indexOf(proc.PPID) !== -1) {\n          parents.push(proc.PID)\n          children.push(proc)\n        }\n      });\n\n      callback(null, children);\n    })\n  ).on('error', callback)\n}\n"]}