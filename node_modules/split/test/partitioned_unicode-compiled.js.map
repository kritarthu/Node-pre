{"version":3,"sources":["partitioned_unicode.js"],"names":[],"mappings":";;AAAA,IAAI,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;IACrC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;;AAEzB,OAAO,CAAE,+CAA+C,CAAC,GAAG,UAAU,IAAI,EAAE;AAC1E,MAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;MACf,WAAW,GAAG,KAAK;MACnB,IAAI,GAAG,EAAE,CAAA;;AAEb,GAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,GAAG,EAAE;AAC3B,eAAW,GAAG,IAAI,CAAA;GACnB,CAAC,CAAA;;AAEF,GAAC,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,GAAG,EAAE;AAAE,QAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;GAAE,CAAC,CAAA;;AAE/C,MAAI,CAAC,GAAG,kBAAkB,CAAA;AAC1B,aAAW,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;;;AAG5B,QAAM,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAClC,QAAM,GAAG,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;;AAEnD,GAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAChB,GAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;AAEhB,GAAC,CAAC,GAAG,EAAE,CAAA;;AAEP,IAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;;AAE5B,IAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;;AAE5C,IAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAA;;AAEhC,MAAI,CAAC,IAAI,EAAE,CAAA;CACZ,CAAA","file":"partitioned_unicode-compiled.js","sourcesContent":["var it = require('it-is').style('colour')\n  , split = require('..')\n\nexports ['split data with partitioned unicode character'] = function (test) {\n  var s = split(/,/g)\n    , caughtError = false\n    , rows = []\n\n  s.on('error', function (err) {\n    caughtError = true\n  })\n \n  s.on('data', function (row) { rows.push(row) })\n\n  var x = 'テスト試験今日とても,よい天気で'\n  unicodeData = new Buffer(x);\n\n  // partition of 日\n  piece1 = unicodeData.slice(0, 20);\n  piece2 = unicodeData.slice(20, unicodeData.length);\n\n  s.write(piece1);\n  s.write(piece2);\n\n  s.end()\n\n  it(caughtError).equal(false)\n\n  it(rows).deepEqual(['テスト試験今日とても', 'よい天気で']);\n\n  it(rows).deepEqual(x.split(','))\n\n  test.done()\n}\n"]}