{"version":3,"sources":["try_catch.asynct.js"],"names":[],"mappings":";;AAAA,IAAI,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;IACrC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;;AAEzB,OAAO,CAAE,wCAAwC,CAAC,GAAG,UAAU,IAAI,EAAE;AACnE,MAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;MACrB,WAAW,GAAG,KAAK;MACnB,IAAI,GAAG,EAAE,CAAA;;AAEb,GAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,GAAG,EAAE;AAC3B,eAAW,GAAG,IAAI,CAAA;GACnB,CAAC,CAAA;;AAEF,GAAC,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,GAAG,EAAE;AAAE,QAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;GAAE,CAAC,CAAA;;AAE/C,GAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;AACtB,IAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;AAC5B,IAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAA;;AAEhC,GAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAA;AAC1B,IAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;AAC3B,IAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAA;;AAE1C,GAAC,CAAC,GAAG,EAAE,CAAA;AACP,MAAI,CAAC,IAAI,EAAE,CAAA;CACZ,CAAA;;AAED,OAAO,CAAE,wCAAwC,CAAC,GAAG,UAAU,IAAI,EAAE;AACnE,MAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;MACrB,WAAW,GAAG,KAAK;MACnB,IAAI,GAAG,EAAE,CAAA;;AAEb,GAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,GAAG,EAAE;AAC3B,eAAW,GAAG,IAAI,CAAA;GACnB,CAAC,CAAA;;AAEF,GAAC,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,GAAG,EAAE;AAAE,QAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;GAAE,CAAC,CAAA;;AAE/C,GAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;AACtB,IAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;AAC5B,IAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAA;;AAEhC,GAAC,CAAC,KAAK,CAAC,eAAe,CAAC,CAAA;AACxB,IAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;AAC5B,IAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAA;;AAE1C,GAAC,CAAC,GAAG,EAAE,CAAA;AACP,IAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;AAC3B,IAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAA;;AAE1C,MAAI,CAAC,IAAI,EAAE,CAAA;CACZ,CAAA","file":"try_catch.asynct-compiled.js","sourcesContent":["var it = require('it-is').style('colour')\n  , split = require('..')\n\nexports ['emit mapper exceptions as error events'] = function (test) {\n  var s = split(JSON.parse)\n    , caughtError = false\n    , rows = []\n \n  s.on('error', function (err) {\n    caughtError = true\n  })\n \n  s.on('data', function (row) { rows.push(row) })\n\n  s.write('{\"a\":1}\\n{\"')\n  it(caughtError).equal(false)\n  it(rows).deepEqual([ { a: 1 } ])\n\n  s.write('b\":2}\\n{\"c\":}\\n')\n  it(caughtError).equal(true)\n  it(rows).deepEqual([ { a: 1 }, { b: 2 } ])\n\n  s.end()\n  test.done()\n}\n\nexports ['mapper error events on trailing chunks'] = function (test) {\n  var s = split(JSON.parse)\n    , caughtError = false\n    , rows = []\n \n  s.on('error', function (err) {\n    caughtError = true\n  })\n \n  s.on('data', function (row) { rows.push(row) })\n\n  s.write('{\"a\":1}\\n{\"')\n  it(caughtError).equal(false)\n  it(rows).deepEqual([ { a: 1 } ])\n\n  s.write('b\":2}\\n{\"c\":}')\n  it(caughtError).equal(false)\n  it(rows).deepEqual([ { a: 1 }, { b: 2 } ])\n\n  s.end()\n  it(caughtError).equal(true)\n  it(rows).deepEqual([ { a: 1 }, { b: 2 } ])\n\n  test.done()\n}\n"]}