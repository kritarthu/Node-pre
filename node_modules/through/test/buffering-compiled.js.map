{"version":3,"sources":["buffering.js"],"names":[],"mappings":"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","file":"buffering-compiled.js","sourcesContent":["var test = require('tape')\nvar through = require('../')\n\n// must emit end before close.\n\ntest('buffering', function(assert) {\n  var ts = through(function (data) {\n    this.queue(data)\n  }, function () {\n    this.queue(null)\n  })\n\n  var ended = false,  actual = []\n\n  ts.on('data', actual.push.bind(actual))\n  ts.on('end', function () {\n    ended = true\n  })\n\n  ts.write(1)\n  ts.write(2)\n  ts.write(3)\n  assert.deepEqual(actual, [1, 2, 3])\n  ts.pause()\n  ts.write(4)\n  ts.write(5)\n  ts.write(6)\n  assert.deepEqual(actual, [1, 2, 3])\n  ts.resume()\n  assert.deepEqual(actual, [1, 2, 3, 4, 5, 6])\n  ts.pause()\n  ts.end()\n  assert.ok(!ended)\n  ts.resume()\n  assert.ok(ended)\n  assert.end()\n})\n\ntest('buffering has data in queue, when ends', function (assert) {\n\n  /*\n   * If stream ends while paused with data in the queue,\n   * stream should still emit end after all data is written\n   * on resume.\n   */\n\n  var ts = through(function (data) {\n    this.queue(data)\n  }, function () {\n    this.queue(null)\n  })\n\n  var ended = false,  actual = []\n\n  ts.on('data', actual.push.bind(actual))\n  ts.on('end', function () {\n    ended = true\n  })\n\n  ts.pause()\n  ts.write(1)\n  ts.write(2)\n  ts.write(3)\n  ts.end()\n  assert.deepEqual(actual, [], 'no data written yet, still paused')\n  assert.ok(!ended, 'end not emitted yet, still paused')\n  ts.resume()\n  assert.deepEqual(actual, [1, 2, 3], 'resumed, all data should be delivered')\n  assert.ok(ended, 'end should be emitted once all data was delivered')\n  assert.end();\n})\n"]}