{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\nvar test = require('tape')\nvar spec = require('stream-spec')\nvar through = require('../')\n\n/*\n  I'm using these two functions, and not streams and pipe\n  so there is less to break. if this test fails it must be\n  the implementation of _through_\n*/\n\nfunction write(array, stream) {\n  array = array.slice()\n  function next() {\n    while(array.length)\n      if(stream.write(array.shift()) === false)\n        return stream.once('drain', next)\n    \n    stream.end()\n  }\n\n  next()\n}\n\nfunction read(stream, callback) {\n  var actual = []\n  stream.on('data', function (data) {\n    actual.push(data)\n  })\n  stream.once('end', function () {\n    callback(null, actual)\n  })\n  stream.once('error', function (err) {\n    callback(err)\n  })\n}\n\ntest('simple defaults', function(assert) {\n\n  var l = 1000\n    , expected = []\n\n  while(l--) expected.push(l * Math.random())\n\n  var t = through()\n  var s = spec(t).through().pausable()\n\n  read(t, function (err, actual) {\n    assert.ifError(err)\n    assert.deepEqual(actual, expected)\n    assert.end()\n  })\n\n  t.on('close', s.validate)\n\n  write(expected, t)\n});\n\ntest('simple functions', function(assert) {\n\n  var l = 1000\n    , expected = [] \n\n  while(l--) expected.push(l * Math.random())\n\n  var t = through(function (data) {\n      this.emit('data', data*2)\n    }) \n  var s = spec(t).through().pausable()\n      \n\n  read(t, function (err, actual) {\n    assert.ifError(err)\n    assert.deepEqual(actual, expected.map(function (data) {\n      return data*2\n    }))\n    assert.end()\n  })\n\n  t.on('close', s.validate)\n\n  write(expected, t)\n})\n\ntest('pauses', function(assert) {\n\n  var l = 1000\n    , expected = [] \n\n  while(l--) expected.push(l) //Math.random())\n\n  var t = through()    \n \n  var s = spec(t)\n      .through()\n      .pausable()\n\n  t.on('data', function () {\n    if(Math.random() > 0.1) return\n    t.pause()\n    process.nextTick(function () {\n      t.resume()\n    })\n  })\n\n  read(t, function (err, actual) {\n    assert.ifError(err)\n    assert.deepEqual(actual, expected)\n  })\n\n  t.on('close', function () {\n    s.validate()\n    assert.end()\n  })\n\n  write(expected, t)\n})\n\ntest('does not soft-end on `undefined`', function(assert) {\n  var stream = through()\n    , count = 0\n\n  stream.on('data', function (data) {\n    count++\n  })\n\n  stream.write(undefined)\n  stream.write(undefined)\n\n  assert.equal(count, 2)\n\n  assert.end()\n})\n"]}