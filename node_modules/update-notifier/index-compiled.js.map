{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\nvar spawn = require('child_process').spawn;\nvar path = require('path');\nvar Configstore = require('configstore');\nvar chalk = require('chalk');\nvar semverDiff = require('semver-diff');\nvar latestVersion = require('latest-version');\nvar stringLength = require('string-length');\nvar isNpm = require('is-npm');\nvar repeating = require('repeating');\n\nfunction UpdateNotifier(options) {\n\tthis.options = options = options || {};\n\toptions.pkg = options.pkg || {};\n\n\t// deprecated options\n\t// TODO: remove this at some point far into the future\n\tif (options.packageName && options.packageVersion) {\n\t\toptions.pkg.name = options.packageName;\n\t\toptions.pkg.version = options.packageVersion;\n\t}\n\n\tif (!options.pkg.name || !options.pkg.version) {\n\t\tthrow new Error('pkg.name and pkg.version required');\n\t}\n\n\tthis.packageName = options.pkg.name;\n\tthis.packageVersion = options.pkg.version;\n\tthis.updateCheckInterval = typeof options.updateCheckInterval === 'number' ? options.updateCheckInterval : 1000 * 60 * 60 * 24; // 1 day\n\tthis.hasCallback = typeof options.callback === 'function';\n\tthis.callback = options.callback || function () {};\n\n\tif (!this.hasCallback) {\n\t\tthis.config = new Configstore('update-notifier-' + this.packageName, {\n\t\t\toptOut: false,\n\t\t\t// init with the current time so the first check is only\n\t\t\t// after the set interval, so not to bother users right away\n\t\t\tlastUpdateCheck: Date.now()\n\t\t});\n\t}\n}\n\nUpdateNotifier.prototype.check = function () {\n\tif (this.hasCallback) {\n\t\treturn this.checkNpm(this.callback);\n\t}\n\n\tif (this.config.get('optOut') || 'NO_UPDATE_NOTIFIER' in process.env || process.argv.indexOf('--no-update-notifier') !== -1) {\n\t\treturn;\n\t}\n\n\tthis.update = this.config.get('update');\n\n\tif (this.update) {\n\t\tthis.config.del('update');\n\t}\n\n\t// Only check for updates on a set interval\n\tif (Date.now() - this.config.get('lastUpdateCheck') < this.updateCheckInterval) {\n\t\treturn;\n\t}\n\n\t// Spawn a detached process, passing the options as an environment property\n\tspawn(process.execPath, [path.join(__dirname, 'check.js'), JSON.stringify(this.options)], {\n\t\tdetached: true,\n\t\tstdio: 'ignore'\n\t}).unref();\n};\n\nUpdateNotifier.prototype.checkNpm = function (cb) {\n\tlatestVersion(this.packageName, function (err, latestVersion) {\n\t\tif (err) {\n\t\t\treturn cb(err);\n\t\t}\n\n\t\tcb(null, {\n\t\t\tlatest: latestVersion,\n\t\t\tcurrent: this.packageVersion,\n\t\t\ttype: semverDiff(this.packageVersion, latestVersion) || 'latest',\n\t\t\tname: this.packageName\n\t\t});\n\t}.bind(this));\n};\n\nUpdateNotifier.prototype.notify = function (opts) {\n\tif (!process.stdout.isTTY || isNpm || !this.update) {\n\t\treturn this;\n\t}\n\n\topts = opts || {};\n\topts.defer = opts.defer === undefined ? true : false;\n\n\tvar line1 = ' Update available: ' + chalk.green.bold(this.update.latest) +\n\t\tchalk.dim(' (current: ' + this.update.current + ')') + ' ';\n\tvar line2 = ' Run ' + chalk.blue('npm install -g ' + this.packageName) +\n\t\t' to update. ';\n\tvar contentWidth = Math.max(stringLength(line1), stringLength(line2));\n\tvar line1rest = contentWidth - stringLength(line1);\n\tvar line2rest = contentWidth - stringLength(line2);\n\tvar top = chalk.yellow('┌' + repeating('─', contentWidth) + '┐');\n\tvar bottom = chalk.yellow('└' + repeating('─', contentWidth) + '┘');\n\tvar side = chalk.yellow('│');\n\n\tvar message =\n\t\t'\\n\\n' +\n\t\ttop + '\\n' +\n\t\tside + line1 + repeating(' ', line1rest) + side + '\\n' +\n\t\tside + line2 + repeating(' ', line2rest) + side + '\\n' +\n\t\tbottom + '\\n';\n\n\tif (opts.defer) {\n\t\tprocess.on('exit', function () {\n\t\t\tconsole.error(message);\n\t\t});\n\t} else {\n\t\tconsole.error(message);\n\t}\n\n\treturn this;\n};\n\nmodule.exports = function (options) {\n\tvar updateNotifier = new UpdateNotifier(options);\n\tupdateNotifier.check();\n\treturn updateNotifier;\n};\n\nmodule.exports.UpdateNotifier = UpdateNotifier;\n"]}