{"version":3,"sources":["perf.js"],"names":[],"mappings":"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","file":"perf-compiled.js","sourcesContent":["var assert = require('assert');\n\nvar uuid = require('../');\n\nvar log = console.log;\n\nvar generators = {\n  v1: uuid.v1,\n  v4: uuid.v4\n};\n\nvar UUID_FORMAT = {\n  v1: /[0-9a-f]{8}-[0-9a-f]{4}-1[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/i,\n  v4: /[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/i\n};\n\nvar N = 1e4;\n\n// Get %'age an actual value differs from the ideal value\nfunction divergence(actual, ideal) {\n  return Math.round(100*100*(actual - ideal)/ideal)/100;\n}\n\nfunction rate(msg, t) {\n  log(msg + ': ' + (N / (Date.now() - t) * 1e3 | 0) + ' uuids\\/second');\n}\n\nfor (var version in generators) {\n  var counts = {}, max = 0;\n  var generator = generators[version];\n  var format = UUID_FORMAT[version];\n\n  log('\\nSanity check ' + N + ' ' + version + ' uuids');\n  for (var i = 0, ok = 0; i < N; i++) {\n    id = generator();\n    if (!format.test(id)) {\n      throw Error(id + ' is not a valid UUID string');\n    }\n\n    if (id != uuid.unparse(uuid.parse(id))) {\n      assert(fail, id + ' is not a valid id');\n    }\n\n    // Count digits for our randomness check\n    if (version == 'v4') {\n      var digits = id.replace(/-/g, '').split('');\n      for (var j = digits.length-1; j >= 0; j--) {\n        var c = digits[j];\n        max = Math.max(max, counts[c] = (counts[c] || 0) + 1);\n      }\n    }\n  }\n\n  // Check randomness for v4 UUIDs\n  if (version == 'v4') {\n    // Limit that we get worried about randomness. (Purely empirical choice, this!)\n    var limit = 2*100*Math.sqrt(1/N);\n\n    log('\\nChecking v4 randomness.  Distribution of Hex Digits (% deviation from ideal)');\n\n    for (var i = 0; i < 16; i++) {\n      var c = i.toString(16);\n      var bar = '', n = counts[c], p = Math.round(n/max*100|0);\n\n      // 1-3,5-8, and D-F: 1:16 odds over 30 digits\n      var ideal = N*30/16;\n      if (i == 4) {\n        // 4: 1:1 odds on 1 digit, plus 1:16 odds on 30 digits\n        ideal = N*(1 + 30/16);\n      } else if (i >= 8 && i <= 11) {\n        // 8-B: 1:4 odds on 1 digit, plus 1:16 odds on 30 digits\n        ideal = N*(1/4 + 30/16);\n      } else {\n        // Otherwise: 1:16 odds on 30 digits\n        ideal = N*30/16;\n      }\n      var d = divergence(n, ideal);\n\n      // Draw bar using UTF squares (just for grins)\n      var s = n/max*50 | 0;\n      while (s--) bar += '=';\n\n      assert(Math.abs(d) < limit, c + ' |' + bar + '| ' + counts[c] + ' (' + d + '% < ' + limit + '%)');\n    }\n  }\n}\n\n// Perf tests\nfor (var version in generators) {\n  log('\\nPerformance testing ' + version + ' UUIDs');\n  var generator = generators[version];\n  var buf = new uuid.BufferClass(16);\n\n  for (var i = 0, t = Date.now(); i < N; i++) generator();\n  rate('uuid.' + version + '()', t);\n\n  for (var i = 0, t = Date.now(); i < N; i++) generator('binary');\n  rate('uuid.' + version + '(\\'binary\\')', t);\n\n  for (var i = 0, t = Date.now(); i < N; i++) generator('binary', buf);\n  rate('uuid.' + version + '(\\'binary\\', buffer)', t);\n}\n"]}